defmodule CodeCorps.GitHub.Adapters.Issue do
  @moduledoc """
  Used to adapt a GitHub Issue payload into attributes for creating or updating
  a `CodeCorps.GithubIssue` and vice-versa.
  """

  alias CodeCorps.{
    Adapter.MapTransformer,
    GithubIssue
  }

  @mapping [
    {:body, ["body"]},
    {:closed_at, ["closed_at"]},
    {:comments_url, ["comments_url"]},
    {:events_url, ["events_url"]},
    {:github_created_at, ["created_at"]},
    {:github_id, ["id"]},
    {:github_updated_at, ["updated_at"]},
    {:html_url, ["html_url"]},
    {:labels_url, ["labels_url"]},
    {:locked, ["locked"]},
    {:number, ["number"]},
    {:state, ["state"]},
    {:title, ["title"]},
    {:url, ["url"]}
  ]

  @doc ~S"""
  Converts a GitHub Issue payload into a set of attributes used to update or
  create a `GithubIssue` record.
  """
  @spec from_api(map) :: map
  def from_api(%{} = payload) do
    payload |> MapTransformer.transform(@mapping)
  end

  @autogenerated_github_keys ~w(closed_at comments_url created_at events_url html_url id labels_url number updated_at url)

  @doc ~S"""
  Converts a `GithubIssue` into a set of attributes used to update or create an
  associated GitHub Issue.
  """
  @spec to_api(GithubIssue.t) :: map
  def to_api(%GithubIssue{} = github_issue) do
    github_issue
    |> Map.from_struct
    |> MapTransformer.transform_inverse(@mapping)
    |> Map.drop(@autogenerated_github_keys)
  end
end
